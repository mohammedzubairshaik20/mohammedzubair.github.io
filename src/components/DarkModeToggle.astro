---
---

<mode-toggle class="flex">
  <button
    class="justify-self-end bg-black dark:bg-white ml-4 inline-flex h-6 w-11 items-center rounded-full"
    id="mode-toggle"
    role="switch"
    type="button"
    tabindex="0"
    aria-checked="false"
    data-headlessui-state=""
    ><span class="sr-only">Toggle dark mode</span><span
      id="mode-circle"
      class="light inline-block h-4 w-4 rounded-full bg-gradient-to-tr invisible"
      ><span
        class="absolute top-0 right-0 w-[10px] h-[10px] rounded-full bg-gray-700 scale-[0]"
      ></span>
    </span>
  </button>
</mode-toggle>

<script>
  function updateHTMLTheme(mode) {
    const themeColorMetaTag = document.head.querySelector(
      'meta[name="theme-color"]'
    );
    if (mode === "dark") {
      document.documentElement.classList.add("dark");
      themeColorMetaTag.content = "#262626"; // Dark mode color
    } else {
      document.documentElement.classList.remove("dark");
      themeColorMetaTag.content = "#ffffff"; // Light mode color
    }
  }

  function updateStorageTheme(mode) {
    sessionStorage.setItem("theme", mode);
  }

  class ModeToggle extends HTMLElement {
    constructor() {
      super();
      // Default to light mode
      let currentMode = "light";

      const toggle = this.querySelector("button");
      const iconElem = toggle?.querySelector("#mode-circle");

      // Initial setting for light mode
      iconElem.classList.add("light");
      iconElem.classList.remove("invisible");

      toggle?.addEventListener("click", () => {
        if (currentMode === "dark") {
          iconElem.classList.remove("dark");
          iconElem.classList.add("light");
          updateHTMLTheme("light");
          currentMode = "light";
        } else {
          iconElem.classList.remove("light");
          iconElem.classList.add("dark");
          updateHTMLTheme("dark");
          currentMode = "dark";
        }
        updateStorageTheme(currentMode);
        iconElem.classList.add("duration-300");
      });
    }
  }

  customElements.define("mode-toggle", ModeToggle);
  // Ensure the theme is set to light on initial load
  updateHTMLTheme("light");
</script>
<style>
  .light {
    transform: translateX(0.25rem);
    background-color: rgb(var(--color-primary-yellow));
  }
  .dark {
    transform: translateX(1.5rem);
    background-color: rgb(var(--color-primary-blue));
  }
</style>
